# .github/workflows/tests.yml
name: Run Tests & Collect Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: journal_db_test
        # We can skip publishing ports; use the service hostname "postgres"
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]  # optional but nice to have

    env:
      # Sync driver for Alembic (no +asyncpg)
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/journal_db_test
      PYTHONPATH: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h postgres -U postgres; do
            sleep 1
          done

      - name: Debug DB URL (print env & settings)
        run: |
          echo "DATABASE_URL from GH env: ${DATABASE_URL}"
          python - <<'PY'
          import os
          from app.core.config import settings
          print("env DATABASE_URL:", os.getenv("DATABASE_URL"))
          print("settings.database_url:", settings.database_url)
          PY

      - name: Run Alembic migrations
        run: alembic upgrade head

      - name: Run tests with coverage
        run: |
          pytest --cov=app --cov-report=xml --cov-fail-under=90

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
