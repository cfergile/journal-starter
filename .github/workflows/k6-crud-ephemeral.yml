name: k6 CRUD (ephemeral env)

on:
  workflow_dispatch:      # manual trigger
  # schedule:
  #   - cron: "30 7 * * *" # optional daily run

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: journal
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d journal"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        env: { PGPASSWORD: postgres }
        run: |
          for i in {1..60}; do
            pg_isready -h localhost -p 5432 -U postgres -d journal && exit 0
            sleep 1
          done
          echo "Postgres not ready" && exit 1

      - name: Run migrations
        env:
          # Use sync-style DSN; your config will normalize for app runtime
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/journal
        run: alembic upgrade head

      - name: Start API
        env:
          # App will auto-normalize to async driver
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/journal
          LOG_LEVEL: INFO
          PROMETHEUS_ENABLED: true
        run: |
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8000/healthz || true)
            [ "$code" = "200" ] && exit 0
            sleep 1
          done
          echo "API failed to become healthy" && exit 1

      - name: Install k6
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gnupg2 ca-certificates
          curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update -y
          sudo apt-get install -y k6

      - name: Run k6 CRUD (ephemeral)
        env:
          BASE_URL: http://127.0.0.1:8000
          ALLOW_PROD: "false"
        run: k6 run k6/entries_crud.js

      - name: Slack alert on failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"k6 CRUD (ephemeral) failed for *journal-starter* :x:\nRun: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" \
            "$SLACK_WEBHOOK_URL"
