name: Uptime - API Health

on:
  schedule:
    - cron: "*/30 * * * *"   # every 30 minutes (UTC)
  workflow_dispatch:          # allow manual runs

jobs:
  ping:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      URL: https://journal-starter.onrender.com/healthz
    steps:
      - name: Check health endpoint
        run: |
          set -euo pipefail
          # Try up to 3 times (handles cold starts)
          for i in 1 2 3; do
            OUT="$(curl -s -o /tmp/resp -w "%{http_code} %{time_total}" --max-time 15 "$URL" || true)"
            CODE="$(echo "$OUT" | awk '{print $1}')"
            LATENCY="$(echo "$OUT" | awk '{print $2}')"
            echo "Attempt $i: HTTP_CODE=$CODE LATENCY=${LATENCY}s"
            if [ "$CODE" = "200" ]; then
              echo "OK ✅"
              exit 0
            fi
            sleep 5
          done
          echo "Healthcheck failed after 3 attempts ❌"
          echo "Last response (truncated):"
          head -c 300 /tmp/resp || true
          exit 1

      - name: Check /metrics when enabled
        if: always()
        run: |
          METRICS_URL="https://journal-starter.onrender.com/metrics"
          CODE="$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "$METRICS_URL" || true)"
          echo "METRICS_HTTP_CODE=$CODE"
          # Don’t fail the job if metrics are disabled; treat 200 as a nice-to-have
          test "$CODE" = "200" && echo "Metrics OK ✅" || echo "Metrics not available (OK if disabled)"
